<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Namespaces>
  <Namespace Name="Competition.Areas.HelpPage.Controllers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Competition.Areas.HelpPage.Controllers' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Competition.Areas.HelpPage.Models">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Competition.Areas.HelpPage.Models' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\Dovile\Competition\Competition\bin\Competition.dll">
   <Modules>
    <Module Name="competition.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'Competition.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Competition.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Competition">
       <Types>
        <Type Name="AuthRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Auth' in type name 'AuthRepository'.</Issue>
          </Message>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'AuthRepository' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition" File="AuthRepository.cs" Line="19">In method 'AuthRepository.AuthRepository()', call System.IDisposable.Dispose on object 'new UserStore&lt;IdentityUser&gt;(new DbContext())' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddUserToRole(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Dovile\Competition\Competition" File="AuthRepository.cs" Line="42">In member 'AuthRepository.AddUserToRole(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message Id="rolename" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition" File="AuthRepository.cs" Line="42">In method 'AuthRepository.AddUserToRole(string, string)', correct the spelling of 'rolename' in parameter name 'rolename' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition" File="AuthRepository.cs" Line="48">Change 'AuthRepository.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition" File="AuthRepository.cs" Line="48">Modify 'AuthRepository.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BundleConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'BundleConfig' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RegisterBundles(System.Web.Optimization.BundleCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\App_Start" File="BundleConfig.cs" Line="11">In externally visible method 'BundleConfig.RegisterBundles(BundleCollection)', validate parameter 'bundles' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FilterConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'FilterConfig' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\App_Start" File="FilterConfig.cs" Line="10">In externally visible method 'FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)', validate parameter 'filters' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'RouteConfig' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Startup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Configuration(Owin.IAppBuilder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition" File="Startup.cs" Line="20">In method 'Startup.Configuration(IAppBuilder)', call System.IDisposable.Dispose on object 'config' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfigureOAuth(Owin.IAppBuilder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition" File="Startup.cs" Line="36">Correct the spelling of 'Auth' in member name 'Startup.ConfigureOAuth(IAppBuilder)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition" File="Startup.cs" Line="36">The 'this' parameter (or 'Me' in Visual Basic) of 'Startup.ConfigureOAuth(IAppBuilder)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebApiConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'WebApiConfig'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Register(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\App_Start" File="WebApiConfig.cs" Line="18">In externally visible method 'WebApiConfig.Register(HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Areas.HelpPage">
       <Types>
        <Type Name="ApiDescriptionExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'ApiDescriptionExtensions'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetFriendlyId(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Text.StringBuilder.AppendFormat(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="ApiDescriptionExtensions.cs" Line="34">Because the behavior of 'StringBuilder.AppendFormat(string, object)' could vary based on the current user's locale settings, replace this call in 'ApiDescriptionExtensions.GetFriendlyId(this ApiDescription)' with a call to 'StringBuilder.AppendFormat(IFormatProvider, string, object)'. If the result of 'StringBuilder.AppendFormat(IFormatProvider, string, object)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="ApiDescriptionExtensions.cs" Line="29">Because the behavior of 'StringBuilder.AppendFormat(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ApiDescriptionExtensions.GetFriendlyId(this ApiDescription)' with a call to 'StringBuilder.AppendFormat(IFormatProvider, string, object, object)'. If the result of 'StringBuilder.AppendFormat(IFormatProvider, string, object, object)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="ApiDescriptionExtensions.cs" Line="17">In externally visible method 'ApiDescriptionExtensions.GetFriendlyId(this ApiDescription)', validate parameter 'description' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageAreaRegistration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterArea(System.Web.Mvc.AreaRegistrationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageAreaRegistration.cs" Line="18">In externally visible method 'HelpPageAreaRegistration.RegisterArea(AreaRegistrationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Register(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Competition.Areas.HelpPage.TextSample.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\App_Start" File="HelpPageConfig.cs" Line="58">Method 'HelpPageConfig.Register(HttpConfiguration)' passes a literal string as parameter 'text' of a call to 'TextSample.TextSample(string)'. Retrieve the following string(s) from a resource table instead: "Binary JSON content. See http://bsonspec.org for details.".</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="11" />
              </User>
             </Notes>
            </Message>
            <Message Id="bsonspec" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\App_Start" File="HelpPageConfig.cs" Line="58">Correct the spelling of the unrecognized token 'bsonspec' in the literal '"Binary JSON content. See http://bsonspec.org for details."'.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="12" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageConfigurationExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateSamples(Competition.Areas.HelpPage.Models.HelpPageApiModel,Competition.Areas.HelpPage.HelpPageSampleGenerator)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="405">Modify 'HelpPageConfigurationExtensions.GenerateSamples(HelpPageApiModel, HelpPageSampleGenerator)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="13" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="220">Correct the spelling of 'Api' in member name 'HelpPageConfigurationExtensions.GetHelpPageApiModel(this HttpConfiguration, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="220">In method 'HelpPageConfigurationExtensions.GetHelpPageApiModel(this HttpConfiguration, string)', correct the spelling of 'api' in parameter name 'apiDescriptionId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="223">In externally visible method 'HelpPageConfigurationExtensions.GetHelpPageApiModel(this HttpConfiguration, string)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="181">In externally visible method 'HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(this HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="206">In externally visible method 'HelpPageConfigurationExtensions.GetModelDescriptionGenerator(this HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="30">In externally visible method 'HelpPageConfigurationExtensions.SetDocumentationProvider(this HttpConfiguration, IDocumentationProvider)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Competition.Areas.HelpPage.HelpPageSampleGenerator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="193">In externally visible method 'HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(this HttpConfiguration, HelpPageSampleGenerator)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageSampleGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetSample(System.Web.Http.Description.ApiDescription,Competition.Areas.HelpPage.SampleDirection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="91">In method 'HelpPageSampleGenerator.GetSample(ApiDescription, SampleDirection)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSampleObject(System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="200">Modify 'HelpPageSampleGenerator.GetSampleObject(Type)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="14" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSampleRequests(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="70">In method 'HelpPageSampleGenerator.GetSampleRequests(ApiDescription)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSampleResponses(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="80">In method 'HelpPageSampleGenerator.GetSampleResponses(ApiDescription)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="216">In method 'HelpPageSampleGenerator.ResolveHttpRequestMessageType(ApiDescription)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="217">In externally visible method 'HelpPageSampleGenerator.ResolveHttpRequestMessageType(ApiDescription)', validate parameter 'api' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Competition.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection`1&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="235">Consider a design that does not require that 'formatters' be an out parameter.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="15" />
              </User>
             </Notes>
            </Message>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="235">In method 'HelpPageSampleGenerator.ResolveType(ApiDescription, string, string, IEnumerable&lt;string&gt;, SampleDirection, out Collection&lt;MediaTypeFormatter&gt;)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SampleObjectFactories" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="62">Consider a design where 'HelpPageSampleGenerator.SampleObjectFactories' doesn't nest generic type 'IList&lt;Func&lt;HelpPageSampleGenerator, Type, object&gt;&gt;'.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="19" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryFormatJson(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="383">Modify 'HelpPageSampleGenerator.TryFormatJson(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="17" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryFormatXml(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="398">Modify 'HelpPageSampleGenerator.TryFormatXml(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="18" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="333">Modify 'HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(MediaTypeFormatter, object, Type, MediaTypeHeaderValue)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="16" />
              </User>
             </Notes>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="325">In externally visible method 'HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(MediaTypeFormatter, object, Type, MediaTypeHeaderValue)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImageSample" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="ImageSample.cs" Line="14">In method 'ImageSample.ImageSample(string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Src" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="ImageSample.cs" Line="23">Correct the spelling of 'Src' in member name 'ImageSample.Src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateObject(System.Type,System.Collections.Generic.Dictionary`2&lt;System.Type,System.Object&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="ObjectGenerator.cs" Line="95">Modify 'ObjectGenerator.GenerateObject(Type, Dictionary&lt;Type, object&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="21" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ObjectGenerator+SimpleTypeObjectGenerator" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#InitializeGenerators()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\SampleGeneration" File="ObjectGenerator.cs" Line="403">'ObjectGenerator.SimpleTypeObjectGenerator.InitializeGenerators()' has a cyclomatic complexity of 43. Rewrite or refactor the method to reduce complexity to 25.</Issue>
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="20" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="XmlDocumentationProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDocumentation(System.Reflection.MemberInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="XmlDocumentationProvider.cs" Line="78">In externally visible method 'XmlDocumentationProvider.GetDocumentation(MemberInfo)', validate parameter 'member' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage" File="XmlDocumentationProvider.cs" Line="40">In externally visible method 'XmlDocumentationProvider.GetDocumentation(HttpControllerDescriptor)', validate parameter 'controllerDescriptor' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Areas.HelpPage.Controllers">
       <Types>
        <Type Name="HelpController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Api(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\Controllers" File="HelpController.cs" Line="35">Correct the spelling of 'Api' in member name 'HelpController.Api(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\Controllers" File="HelpController.cs" Line="35">In method 'HelpController.Api(string)', correct the spelling of 'api' in parameter name 'apiId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Areas.HelpPage.Models">
       <Types>
        <Type Name="HelpPageApiModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'HelpPageApiModel'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ApiDescription" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Areas\HelpPage\Models" File="HelpPageApiModel.cs" Line="28">Correct the spelling of 'Api' in member name 'HelpPageApiModel.ApiDescription' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Context">
       <Types>
        <Type Name="DbContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TblClubs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="31">Correct the spelling of 'Tbl' in member name 'DbContext.TblClubs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblCompetitions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="19">Correct the spelling of 'Tbl' in member name 'DbContext.TblCompetitions' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblCompetitorsClim" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="21">Correct the spelling of 'Clim' in member name 'DbContext.TblCompetitorsClim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="21">Correct the spelling of 'Tbl' in member name 'DbContext.TblCompetitorsClim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblCompetitorsKKT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="20">Correct the casing of 'KKT' in member name 'DbContext.TblCompetitorsKKT' by changing it to 'Kkt'.</Issue>
            </Message>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="20">Correct the spelling of 'Tbl' in member name 'DbContext.TblCompetitorsKKT' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblCompJudges" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="29">Correct the spelling of 'Tbl' in member name 'DbContext.TblCompJudges' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblJudgesPapersClimb" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="23">Correct the spelling of 'Tbl' in member name 'DbContext.TblJudgesPapersClimb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblJudgesPapersKKT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="22">Correct the casing of 'KKT' in member name 'DbContext.TblJudgesPapersKKT' by changing it to 'Kkt'.</Issue>
            </Message>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="22">Correct the spelling of 'Tbl' in member name 'DbContext.TblJudgesPapersKKT' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblPaperTypes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="30">Correct the spelling of 'Tbl' in member name 'DbContext.TblPaperTypes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblPenalties" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="24">Correct the spelling of 'Tbl' in member name 'DbContext.TblPenalties' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblPenaltyQuantities" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="25">Correct the spelling of 'Tbl' in member name 'DbContext.TblPenaltyQuantities' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblRoles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="32">Correct the spelling of 'Tbl' in member name 'DbContext.TblRoles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblRoutesClim" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="27">Correct the spelling of 'Clim' in member name 'DbContext.TblRoutesClim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="27">Correct the spelling of 'Tbl' in member name 'DbContext.TblRoutesClim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblRoutesKKT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="26">Correct the casing of 'KKT' in member name 'DbContext.TblRoutesKKT' by changing it to 'Kkt'.</Issue>
            </Message>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="26">Correct the spelling of 'Tbl' in member name 'DbContext.TblRoutesKKT' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblTeams" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="28">Correct the spelling of 'Tbl' in member name 'DbContext.TblTeams' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblUserRoles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="33">Correct the spelling of 'Tbl' in member name 'DbContext.TblUserRoles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TblUsers" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="DbContext.cs" Line="18">Correct the spelling of 'Tbl' in member name 'DbContext.TblUsers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TblClub" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblClub'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblCompetition" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblCompetition'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Context" File="TblCompetition.cs" Line="18">The property name 'TblCompetition.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TblCompetitorsClimb" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblCompetitorsClimb'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblCompetitorsKKT" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'TblCompetitorsKKT' by changing it to 'Kkt'.</Issue>
          </Message>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblCompetitorsKKT'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblCompJudge" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblCompJudge'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblJudgesPaperClim" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'TblJudgesPaperClim'.</Issue>
          </Message>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblJudgesPaperClim'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblJudgesPaperKKT" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'TblJudgesPaperKKT' by changing it to 'Kkt'.</Issue>
          </Message>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblJudgesPaperKKT'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblPaperType" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblPaperType'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblPenalty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblPenalty'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Yra" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Yra" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="TblPenalty.cs" Line="12">Correct the spelling of 'Yra' in member name 'TblPenalty.Yra' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TblPenaltyQuantity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblPenaltyQuantity'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblRole" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblRole'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblRouteClimb" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblRouteClimb'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Context" File="TblRouteClimb.cs" Line="14">The property name 'TblRouteClimb.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TblRouteKKT" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'TblRouteKKT' by changing it to 'Kkt'.</Issue>
          </Message>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblRouteKKT'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Context" File="TblRouteKKT.cs" Line="17">The property name 'TblRouteKKT.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TblTeam" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblTeam'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TblUser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblUser'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Lytis" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lytis" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Context" File="TblUser.cs" Line="23">Correct the spelling of 'Lytis' in member name 'TblUser.Lytis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TblUserRole" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tbl' in type name 'TblUserRole'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Controllers">
       <Types>
        <Type Name="AccountController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#conRole" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AccountController.conRole' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BaseAPIController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'BaseAPIController' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CompetitionDB" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'BaseAPIController.CompetitionDB' or change the field to one that is an immutable reference type. If the reference type 'DbContext' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BaseAPIController.CompetitionDB' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToJson(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="17">In method 'BaseAPIController.ToJson(dynamic)', object 'response' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'response' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="16">In member 'BaseAPIController.ToJson(dynamic)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToJsonCreated(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="49">In method 'BaseAPIController.ToJsonCreated(dynamic)', object 'response' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'response' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="48">In member 'BaseAPIController.ToJsonCreated(dynamic)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="48">The 'this' parameter (or 'Me' in Visual Basic) of 'BaseAPIController.ToJsonCreated(dynamic)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToJsonNotFound(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="38">In method 'BaseAPIController.ToJsonNotFound(dynamic)', object 'response' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'response' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="37">In member 'BaseAPIController.ToJsonNotFound(dynamic)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="37">The 'this' parameter (or 'Me' in Visual Basic) of 'BaseAPIController.ToJsonNotFound(dynamic)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToJsonOK(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="27">In method 'BaseAPIController.ToJsonOK(dynamic)', object 'response' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'response' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="26">Correct the casing of 'OK' in member name 'BaseAPIController.ToJsonOK(dynamic)' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="26">In member 'BaseAPIController.ToJsonOK(dynamic)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="BaseAPIController.cs" Line="26">The 'this' parameter (or 'Me' in Visual Basic) of 'BaseAPIController.ToJsonOK(dynamic)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitionController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitionController.cs" Line="75">'CompetitionController.Get(string)' is coupled with 32 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitionController.cs" Line="53">In method 'CompetitionController.Get(string, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitionController.cs" Line="53">Parameter 'n' of 'CompetitionController.Get(string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.Int32,Competition.Context.TblCompetition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitionController.cs" Line="233">Parameter 'id' of 'CompetitionController.Put(int, TblCompetition)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitorsClimController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'CompetitorsClimController'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Delete(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="264">In method 'CompetitorsClimController.Delete(int, int)', correct the spelling of 'compid' in parameter name 'compid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="18">In method 'CompetitorsClimController.Get(int)', correct the spelling of 'compid' in parameter name 'compid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="52">In method 'CompetitorsClimController.Get(int, int)', correct the spelling of 'compid' in parameter name 'compid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="52">In method 'CompetitorsClimController.Get(int, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="52">Parameter 'n' of 'CompetitorsClimController.Get(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="69">In method 'CompetitorsClimController.Get(int, int, string)', correct the spelling of 'compid' in parameter name 'compid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="69">In method 'CompetitorsClimController.Get(int, int, string)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="69">Parameter 'n' of 'CompetitorsClimController.Get(int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="35">In method 'CompetitorsClimController.Get(int, string)', correct the spelling of 'compid' in parameter name 'compid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="35">In method 'CompetitorsClimController.Get(int, string)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="35">Parameter 'n' of 'CompetitorsClimController.Get(int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="110">'CompetitorsClimController.Get(int, string, int)' is coupled with 32 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="110">In method 'CompetitorsClimController.Get(int, string, int)', consider providing a more meaningful name than parameter name 'm'.</Issue>
            </Message>
            <Message Id="m" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="110">Parameter 'm' of 'CompetitorsClimController.Get(int, string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="86">'CompetitorsClimController.Get(string, int)' is coupled with 31 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="86">In method 'CompetitorsClimController.Get(string, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="86">Parameter 'n' of 'CompetitorsClimController.Get(string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="184">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="188">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="192">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="197">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="201">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="205">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="182">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="184">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="186">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="188">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="192">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="195">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="197">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="199">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="201">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="203">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="205">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.Int32,System.String,Competition.Context.TblCompetitorsClimb)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="146">'CompetitorsClimController.Post(int, string, TblCompetitorsClimb)' is coupled with 34 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsClimController.cs" Line="147">In externally visible method 'CompetitorsClimController.Post(int, string, TblCompetitorsClimb)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitorsKKTController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'CompetitorsKKTController' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Delete(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CompId" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="258">'CompetitorsKKTController.Delete(int)' declares a variable, 'CompId', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="UserId" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="257">'CompetitorsKKTController.Delete(int)' declares a variable, 'UserId', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="273">In method 'CompetitorsKKTController.Delete(int, int)', correct the spelling of 'compid' in parameter name 'compid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="52">In method 'CompetitorsKKTController.Get(int, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="52">Parameter 'n' of 'CompetitorsKKTController.Get(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="69">In method 'CompetitorsKKTController.Get(int, int, string)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="69">Parameter 'n' of 'CompetitorsKKTController.Get(int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="35">In method 'CompetitorsKKTController.Get(int, string)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="35">Parameter 'n' of 'CompetitorsKKTController.Get(int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="113">'CompetitorsKKTController.Get(int, string, int)' is coupled with 34 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="113">In method 'CompetitorsKKTController.Get(int, string, int)', consider providing a more meaningful name than parameter name 'm'.</Issue>
            </Message>
            <Message Id="m" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="113">Parameter 'm' of 'CompetitorsKKTController.Get(int, string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="86">'CompetitorsKKTController.Get(string, int)' is coupled with 31 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="86">In method 'CompetitorsKKTController.Get(string, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="id" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="88">'CompetitorsKKTController.Get(string, int)' declares a variable, 'id', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="86">Parameter 'n' of 'CompetitorsKKTController.Get(string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="188">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="192">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="196">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="201">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="205">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="209">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="186">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="188">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="190">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="192">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="196">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="199">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="201">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="203">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="205">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="209">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTController.Post(int, int)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.Int32,System.String,Competition.Context.TblCompetitorsKKT)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="149">'CompetitorsKKTController.Post(int, string, TblCompetitorsKKT)' is coupled with 34 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="Id" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="153">'CompetitorsKKTController.Post(int, string, TblCompetitorsKKT)' declares a variable, 'Id', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompetitorsKKTController.cs" Line="150">In externally visible method 'CompetitorsKKTController.Post(int, string, TblCompetitorsKKT)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompJudgeController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="CompJudgeController.cs" Line="36">'CompJudgeController.Get(string)' is coupled with 32 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JudgesPaperClimController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'JudgesPaperClimController'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Get(System.Int32,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperClimController.cs" Line="71">In method 'JudgesPaperClimController.Get(int, int, string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="s" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperClimController.cs" Line="71">Parameter 's' of 'JudgesPaperClimController.Get(int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperClimController.cs" Line="97">In method 'JudgesPaperClimController.Put(int, int, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JudgesPaperKKTController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'JudgesPaperKKTController' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#PointsFromPenalties(System.Int32,System.Collections.Generic.List`1&lt;Competition.Models.PenaltyQuantityModel&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="96">Change 'List&lt;PenaltyQuantityModel&gt;' in 'JudgesPaperKKTController.PointsFromPenalties(int, List&lt;PenaltyQuantityModel&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="96">Parameter 'id' of 'JudgesPaperKKTController.PointsFromPenalties(int, List&lt;PenaltyQuantityModel&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="99">In externally visible method 'JudgesPaperKKTController.PointsFromPenalties(int, List&lt;PenaltyQuantityModel&gt;)', validate parameter 'pen' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PointSumFromPenalties(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="116">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.PointSumFromPenalties(int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="118">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.PointSumFromPenalties(int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="118">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.PointSumFromPenalties(int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="116">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.PointSumFromPenalties(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="118">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.PointSumFromPenalties(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="118">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.PointSumFromPenalties(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.Int32,Competition.Context.TblJudgesPaperKKT)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="74">Parameter 'id' of 'JudgesPaperKKTController.Put(int, TblJudgesPaperKKT)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="75">In externally visible method 'JudgesPaperKKTController.Put(int, TblJudgesPaperKKT)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SecToTime(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="131">The 'this' parameter (or 'Me' in Visual Basic) of 'JudgesPaperKKTController.SecToTime(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="138">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="142">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="146">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="150">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="154">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="158">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeToSec(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="124">The 'this' parameter (or 'Me' in Visual Basic) of 'JudgesPaperKKTController.TimeToSec(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="126">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.TimeToSec(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="126">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.TimeToSec(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="126">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'JudgesPaperKKTController.TimeToSec(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="JudgesPaperKKTController.cs" Line="126">In externally visible method 'JudgesPaperKKTController.TimeToSec(string)', validate parameter 'time' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PenaltyController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Post(Competition.Context.TblPenalty)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="PenaltyController.cs" Line="42">In externally visible method 'PenaltyController.Post(TblPenalty)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.Int32,Competition.Context.TblPenalty)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="PenaltyController.cs" Line="51">Parameter 'id' of 'PenaltyController.Put(int, TblPenalty)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="PenaltyController.cs" Line="52">In externally visible method 'PenaltyController.Put(int, TblPenalty)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PenaltyQuantityController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Put(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="PenaltyQuantityController.cs" Line="49">In method 'PenaltyQuantityController.Put(int, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AllPenaltyQuantities(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="309">Change 'List&lt;PenaltyQuantityModel&gt;' in 'ResultController.AllPenaltyQuantities(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Judges" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="309">In member 'ResultController.AllPenaltyQuantities(int)', correct the casing of 'Judges' in parameter name 'JudgesPaperId' by changing it to 'judges'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KaboriaiResults(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="53">Change 'List&lt;ResultsClimbKaboriai&gt;' in 'ResultController.KaboriaiResults(int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Kaboriai" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="53">Correct the spelling of 'Kaboriai' in member name 'ResultController.KaboriaiResults(int, int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="resultType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="53">Parameter 'resultType' of 'ResultController.KaboriaiResults(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LBCResults(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="102">Change 'List&lt;ResultsClimLBC&gt;' in 'ResultController.LBCResults(int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="LBC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="102">Correct the casing of 'LBC' in member name 'ResultController.LBCResults(int, int)' by changing it to 'Lbc'.</Issue>
            </Message>
            <Message Id="resultType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="102">Parameter 'resultType' of 'ResultController.LBCResults(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxTimeRoute(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Route" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="364">In member 'ResultController.MaxTimeRoute(int)', correct the casing of 'Route' in parameter name 'RouteId' by changing it to 'route'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PointsRoute(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Route" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="370">In member 'ResultController.PointsRoute(int)', correct the casing of 'Route' in parameter name 'RouteId' by changing it to 'route'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pointSumFromPenalties(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="point" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="375">Correct the casing of 'point' in member name 'ResultController.pointSumFromPenalties(int)' by changing it to 'Point'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResultsClim(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="151">Change 'List&lt;ResultsClim&gt;' in 'ResultController.ResultsClim(int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="151">Correct the spelling of 'Clim' in member name 'ResultController.ResultsClim(int, int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="resultType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="151">Parameter 'resultType' of 'ResultController.ResultsClim(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResultsKKT1(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="194">Change 'List&lt;ResultModel&gt;' in 'ResultController.ResultsKKT1(int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="194">Correct the casing of 'KKT' in member name 'ResultController.ResultsKKT1(int, int)' by changing it to 'Kkt'.</Issue>
            </Message>
            <Message Id="resultType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="194">Parameter 'resultType' of 'ResultController.ResultsKKT1(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResultsKKT2(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="256">Change 'List&lt;ResultModel&gt;' in 'ResultController.ResultsKKT2(int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="256">Correct the casing of 'KKT' in member name 'ResultController.ResultsKKT2(int, int)' by changing it to 'Kkt'.</Issue>
            </Message>
            <Message Id="resultType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="256">Parameter 'resultType' of 'ResultController.ResultsKKT2(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SecToTime(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="330">The 'this' parameter (or 'Me' in Visual Basic) of 'ResultController.SecToTime(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="337">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ResultController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="341">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ResultController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="345">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ResultController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="349">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ResultController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="353">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ResultController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="357">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ResultController.SecToTime(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeToSec(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="324">The 'this' parameter (or 'Me' in Visual Basic) of 'ResultController.TimeToSec(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="325">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ResultController.TimeToSec(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="325">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ResultController.TimeToSec(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="325">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ResultController.TimeToSec(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="ResultController.cs" Line="325">In externally visible method 'ResultController.TimeToSec(string)', validate parameter 'time' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteClimController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'RouteClimController'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RouteKKTController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'RouteKKTController' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Get(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="compId" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="RouteKKTController.cs" Line="46">Parameter 'compId' of 'RouteKKTController.Get(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.Int32,Competition.Context.TblRouteKKT)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="routeId" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="RouteKKTController.cs" Line="67">Parameter 'routeId' of 'RouteKKTController.Put(int, TblRouteKKT)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TeamController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="TeamController.cs" Line="42">In method 'TeamController.Get(string, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="TeamController.cs" Line="42">Parameter 'n' of 'TeamController.Get(string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(Competition.Context.TblTeam)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="TeamController.cs" Line="67">In externally visible method 'TeamController.Post(TblTeam)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.String,Competition.Context.TblTeam)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="TeamController.cs" Line="80">In externally visible method 'TeamController.Post(string, TblTeam)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="85">In method 'UserController.Get(int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="85">Parameter 'n' of 'UserController.Get(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="59">In method 'UserController.Get(int, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="59">Parameter 'n' of 'UserController.Get(int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="61">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserController.Get(int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="115">In method 'UserController.Get(int, string)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="115">Parameter 'n' of 'UserController.Get(int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="45">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserController.Get(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="74">In method 'UserController.Get(string, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="74">Parameter 'n' of 'UserController.Get(string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="99">In method 'UserController.Get(string, int, int)', consider providing a more meaningful name than parameter name 'm'.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="99">In method 'UserController.Get(string, int, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="m" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="99">Parameter 'm' of 'UserController.Get(string, int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="99">Parameter 'n' of 'UserController.Get(string, int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.String,Competition.Context.TblUser)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="134">In externally visible method 'UserController.Post(string, TblUser)', validate parameter 'user' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.String,Competition.Context.TblUser,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="150">In method 'UserController.Post(string, TblUser, int)', consider providing a more meaningful name than parameter name 'n'.</Issue>
            </Message>
            <Message Id="n" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="150">Parameter 'n' of 'UserController.Post(string, TblUser, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="155">In externally visible method 'UserController.Post(string, TblUser, int)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.Int32,System.String,Competition.Context.TblUser)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="194">In externally visible method 'UserController.Put(int, string, TblUser)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Put(System.String,Competition.Context.TblUser)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="user" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Controllers" File="UserController.cs" Line="181">Parameter 'user' of 'UserController.Put(string, TblUser)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Migrations">
       <Types>
        <Type Name="Configuration" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Configuration' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Competition.Models">
       <Types>
        <Type Name="CompetitionClimbModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Climbers" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionClimbModel.cs" Line="11">'CompetitionClimbModel.Climbers.get()' appears to have no upstream public or protected callers.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionClimbModel.cs" Line="11">'CompetitionClimbModel.Climbers.set(List&lt;UserModel&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Judges" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionClimbModel.cs" Line="13">'CompetitionClimbModel.Judges.get()' appears to have no upstream public or protected callers.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionClimbModel.cs" Line="13">'CompetitionClimbModel.Judges.set(List&lt;CompJudgeModel&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Routes" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionClimbModel.cs" Line="12">'CompetitionClimbModel.Routes.get()' appears to have no upstream public or protected callers.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionClimbModel.cs" Line="12">'CompetitionClimbModel.Routes.set(List&lt;RouteClimbModel&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitionKKTModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'CompetitionKKTModel' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Routes" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionKKTModel.cs" Line="12">'CompetitionKKTModel.Routes.get()' appears to have no upstream public or protected callers.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionKKTModel.cs" Line="12">'CompetitionKKTModel.Routes.set(List&lt;RouteKKTModel&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Teams" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionKKTModel.cs" Line="11">'CompetitionKKTModel.Teams.get()' appears to have no upstream public or protected callers.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionKKTModel.cs" Line="11">'CompetitionKKTModel.Teams.set(List&lt;TeamModel&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitionModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblCompetition)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="38">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitionModel.CompetitionModel(TblCompetition)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="40">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitionModel.CompetitionModel(TblCompetition)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="42">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitionModel.CompetitionModel(TblCompetition)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="44">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitionModel.CompetitionModel(TblCompetition)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="48">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitionModel.CompetitionModel(TblCompetition)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="28">In externally visible method 'CompetitionModel.CompetitionModel(TblCompetition)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitionModel.cs" Line="20">The property name 'CompetitionModel.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitorsClimModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'CompetitorsClimModel'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Competition.Context.TblCompetitorsClimb)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="23">In externally visible method 'CompetitorsClimModel.CompetitorsClimModel(TblCompetitorsClimb)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setDate2(System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="31">In member 'CompetitorsClimModel.setDate2(DateTime)', correct the casing of 'Date' in parameter name 'Date' by changing it to 'date'.</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="31">Correct the casing of 'set' in member name 'CompetitorsClimModel.setDate2(DateTime)' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="32">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="34">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="36">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="38">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsClimModel.cs" Line="42">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsClimModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompetitorsKKTModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'CompetitorsKKTModel' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Competition.Context.TblCompetitorsKKT)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="22">In externally visible method 'CompetitorsKKTModel.CompetitorsKKTModel(TblCompetitorsKKT)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setDate2(System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="30">In member 'CompetitorsKKTModel.setDate2(DateTime)', correct the casing of 'Date' in parameter name 'Date' by changing it to 'date'.</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="30">Correct the casing of 'set' in member name 'CompetitorsKKTModel.setDate2(DateTime)' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="31">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="33">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="35">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="37">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompetitorsKKTModel.cs" Line="41">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'CompetitorsKKTModel.setDate2(DateTime)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompJudgeModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblCompJudge)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="CompJudgeModel.cs" Line="16">In externally visible method 'CompJudgeModel.CompJudgeModel(TblCompJudge)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CompKidsKKTModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'CompKidsKKTModel' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="JudgesPaperClimbModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblJudgesPaperClim)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="JudgesPaperClimbModel.cs" Line="29">In externally visible method 'JudgesPaperClimbModel.JudgesPaperClimbModel(TblJudgesPaperClim)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JudgesPaperKKTModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'JudgesPaperKKTModel' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Competition.Context.TblJudgesPaperKKT)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="JudgesPaperKKTModel.cs" Line="33">In externally visible method 'JudgesPaperKKTModel.JudgesPaperKKTModel(TblJudgesPaperKKT)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Penalties" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="JudgesPaperKKTModel.cs" Line="20">Change 'JudgesPaperKKTModel.Penalties' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="JudgesPaperKKTModel.cs" Line="20">Change 'List&lt;PenaltyQuantityModel&gt;' in 'JudgesPaperKKTModel.Penalties' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimewithPenalty" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Timewith" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Models" File="JudgesPaperKKTModel.cs" Line="17">Correct the spelling of 'Timewith' in member name 'JudgesPaperKKTModel.TimewithPenalty' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PaperTypeModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblPaperType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="PaperTypeModel.cs" Line="15">In externally visible method 'PaperTypeModel.PaperTypeModel(TblPaperType)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PenaltyModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblPenalty)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="PenaltyModel.cs" Line="16">In externally visible method 'PenaltyModel.PenaltyModel(TblPenalty)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PenaltyQuantityModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblPenaltyQuantity)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="PenaltyQuantityModel.cs" Line="14">In externally visible method 'PenaltyQuantityModel.PenaltyQuantityModel(TblPenaltyQuantity)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#JudgesPapers" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="ResultModel.cs" Line="14">Change 'ResultModel.JudgesPapers' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="ResultModel.cs" Line="14">Change 'List&lt;JudgesPaperKKTModel&gt;' in 'ResultModel.JudgesPapers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultsClim" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'ResultsClim'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ResultsClimbKaboriai" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Kaboriai" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Kaboriai' in type name 'ResultsClimbKaboriai'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RoutePonts" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultsClimbKaboriai.RoutePonts' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Ponts" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ponts' in member name 'ResultsClimbKaboriai.RoutePonts' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultsClimLBC" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="LBC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LBC' in type name 'ResultsClimLBC' by changing it to 'Lbc'.</Issue>
          </Message>
          <Message Id="Clim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Clim' in type name 'ResultsClimLBC'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RoleModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblUserRole)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="RoleModel.cs" Line="17">In externally visible method 'RoleModel.RoleModel(TblUserRole)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteClimbModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblRouteClimb)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="RouteClimbModel.cs" Line="21">In externally visible method 'RouteClimbModel.RouteClimbModel(TblRouteClimb)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="RouteClimbModel.cs" Line="17">The property name 'RouteClimbModel.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteKKTModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="KKT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'KKT' in type name 'RouteKKTModel' by changing it to 'Kkt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Competition.Context.TblRouteKKT)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="RouteKKTModel.cs" Line="20">In externally visible method 'RouteKKTModel.RouteKKTModel(TblRouteKKT)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="RouteKKTModel.cs" Line="16">The property name 'RouteKKTModel.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TeamModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblTeam)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="TeamModel.cs" Line="16">In externally visible method 'TeamModel.TeamModel(TblTeam)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Teammates" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="TeamModel.cs" Line="12">Change 'TeamModel.Teammates' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="TeamModel.cs" Line="12">Change 'List&lt;UserModel&gt;' in 'TeamModel.Teammates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Competition.Context.TblUser)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="42">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'UserModel.UserModel(TblUser)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="44">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'UserModel.UserModel(TblUser)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="46">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'UserModel.UserModel(TblUser)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="48">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'UserModel.UserModel(TblUser)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="52">Because the behavior of 'DateTime.ToString()' could vary based on the current user's locale settings, replace this call in 'UserModel.UserModel(TblUser)' with a call to 'DateTime.ToString(IFormatProvider)'. If the result of 'DateTime.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="30">In externally visible method 'UserModel.UserModel(TblUser)', validate parameter 'row' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lytis" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lytis" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="22">Correct the spelling of 'Lytis' in member name 'UserModel.Lytis' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="26">Change 'UserModel.Roles' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="ExcludedInSource" Created="2018-05-14 14:31:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Dovile\Competition\Competition\Models" File="UserModel.cs" Line="26">Change 'List&lt;RoleModel&gt;' in 'UserModel.Roles' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Notes>
  <User Name="[SuppressMessage]">
   <Note Id="11" Modified="2018-05-14 14:31:37Z">End users may choose to merge this string with existing localized resources.</Note>
   <Note Id="12" Modified="2018-05-14 14:31:37Z">Part of a URI.</Note>
   <Note Id="13" Modified="2018-05-14 14:31:37Z">The exception is recorded as ErrorMessages.</Note>
   <Note Id="14" Modified="2018-05-14 14:31:37Z">Even if all items in SampleObjectFactories throw, problem will be visible as missing sample.</Note>
   <Note Id="15" Modified="2018-05-14 14:31:37Z">This is only used in advanced scenarios.</Note>
   <Note Id="16" Modified="2018-05-14 14:31:37Z">The exception is recorded as InvalidSample.</Note>
   <Note Id="17" Modified="2018-05-14 14:31:37Z">Handling the failure by returning the original string.</Note>
   <Note Id="18" Modified="2018-05-14 14:31:37Z">Handling the failure by returning the original string.</Note>
   <Note Id="19" Modified="2018-05-14 14:31:37Z">This is an appropriate nesting of generic types</Note>
   <Note Id="20" Modified="2018-05-14 14:31:37Z">These are simple type factories and cannot be split up.</Note>
   <Note Id="21" Modified="2018-05-14 14:31:37Z">Here we just want to return null if anything goes wrong.</Note>
  </User>
 </Notes>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
